package docs

import "github.com/gobuffalo/packr"

// !!! GENERATED FILE !!!
// Do NOT hand edit this file!!
// It is recommended that you DO NOT check into this file into SCM.
// We STRONGLY recommend you delete this file after you have built your
// Go binary. You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("./", "package.go", "\"Ly8gUGFja2FnZSBkb2NzIEdvdGlmeSBSRVNULUFQSS4KLy8KLy8gVGhpcyBpcyB0aGUgZG9jdW1lbnRhdGlvbiBvZiB0aGUgR290aWZ5IFJFU1QtQVBJLgovLwovLyAjIEF1dGhlbnRpY2F0aW9uCi8vIEluIEdvdGlmeSB0aGVyZSBhcmUgdHdvIHRva2VuIHR5cGVzOgovLyBfX2NsaWVudFRva2VuX186IGEgY2xpZW50IGlzIHNvbWV0aGluZyB0aGF0IHJlY2VpdmVzIG1lc3NhZ2UgYW5kIG1hbmFnZXMgc3R1ZmYgbGlrZSBjcmVhdGluZyBuZXcgdG9rZW5zIG9yIGRlbGV0ZSBtZXNzYWdlcy4gKGYuZXggdGhpcyB0b2tlbiBzaG91bGQgYmUgdXNlZCBmb3IgYW4gYW5kcm9pZCBhcHApCi8vIF9fYXBwVG9rZW5fXzogYW4gYXBwbGljYXRpb24gaXMgc29tZXRoaW5nIHRoYXQgc2VuZHMgbWVzc2FnZXMgKGYuZXguIHRoaXMgdG9rZW4gc2hvdWxkIGJlIHVzZWQgZm9yIGEgc2hlbGwgc2NyaXB0KQovLwovLyBUaGUgdG9rZW4gY2FuIGJlIGVpdGhlciB0cmFuc21pdHRlZCB0aHJvdWdoIGEgaGVhZGVyIG5hbWVkIGBYLUdvdGlmeS1LZXlgIG9yIGEgcXVlcnkgcGFyYW1ldGVyIG5hbWVkIGB0b2tlbmAuCi8vIFRoZXJlIGlzIGFsc28gdGhlIHBvc3NpYmlsaXR5IHRvIGF1dGhlbnRpY2F0ZSB0aHJvdWdoIGJhc2ljIGF1dGgsIHRoaXMgc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpbmcgYSBjbGllbnRUb2tlbi4KLy8KLy8gXC0tLQovLwovLyBGb3VuZCBhIGJ1ZyBvciBoYXZlIHNvbWUgcXVlc3Rpb25zPyBbQ3JlYXRlIGFuIGlzc3VlIG9uIEdpdEh1Yl0oaHR0cHM6Ly9naXRodWIuY29tL2dvdGlmeS9zZXJ2ZXIvaXNzdWVzKQovLwovLyAgICAgU2NoZW1lczogaHR0cCwgaHR0cHMKLy8gICAgIEhvc3Q6IGxvY2FsaG9zdAovLyAgICAgVmVyc2lvbjogMS4wLjEKLy8gICAgIExpY2Vuc2U6IE1JVCBodHRwczovL2dpdGh1Yi5jb20vZ290aWZ5L3NlcnZlci9ibG9iL21hc3Rlci9MSUNFTlNFCi8vCi8vICAgICBDb25zdW1lczoKLy8gICAgIC0gYXBwbGljYXRpb24vanNvbgovLwovLyAgICAgUHJvZHVjZXM6Ci8vICAgICAtIGFwcGxpY2F0aW9uL2pzb24KLy8KLy8gICAgIFNlY3VyaXR5RGVmaW5pdGlvbnM6Ci8vICAgICAgICBhcHBUb2tlblF1ZXJ5OgovLyAgICAgICAgICAgdHlwZTogYXBpS2V5Ci8vICAgICAgICAgICBuYW1lOiB0b2tlbgovLyAgICAgICAgICAgaW46IHF1ZXJ5Ci8vICAgICAgICBjbGllbnRUb2tlblF1ZXJ5OgovLyAgICAgICAgICAgdHlwZTogYXBpS2V5Ci8vICAgICAgICAgICBuYW1lOiB0b2tlbgovLyAgICAgICAgICAgaW46IHF1ZXJ5Ci8vIAkgICAgICBhcHBUb2tlbkhlYWRlcjoKLy8gICAgICAgICAgIHR5cGU6IGFwaUtleQovLyAgICAgICAgICAgbmFtZTogWC1Hb3RpZnktS2V5Ci8vICAgICAgICAgICBpbjogaGVhZGVyCi8vIAkgICAgICBjbGllbnRUb2tlbkhlYWRlcjoKLy8gICAgICAgICAgIHR5cGU6IGFwaUtleQovLyAgICAgICAgICAgbmFtZTogWC1Hb3RpZnktS2V5Ci8vICAgICAgICAgICBpbjogaGVhZGVyCi8vICAgICAgICBiYXNpY0F1dGg6Ci8vICAgICAgICAgICB0eXBlOiBiYXNpYwovLwovLyBzd2FnZ2VyOm1ldGEKcGFja2FnZSBkb2NzCg==\"")
	packr.PackJSONBytes("./", "spec.json", "\"\"")
	packr.PackJSONBytes("./", "swagger.go", "\"cGFja2FnZSBkb2NzDQoNCmltcG9ydCAoDQoJImdpdGh1Yi5jb20vZ2luLWdvbmljL2dpbiINCgkiZ2l0aHViLmNvbS9nb2J1ZmZhbG8vcGFja3IiDQoJInN0cmluZ3MiDQopDQoNCi8vIFNlcnZlIHNlcnZlcyB0aGUgZG9jdW1lbnRhdGlvbi4NCmZ1bmMgU2VydmUoY3R4ICpnaW4uQ29udGV4dCkgew0KCWN0eC5Xcml0ZXIuV3JpdGVTdHJpbmcoZ2V0KGN0eC5SZXF1ZXN0LlVSTC5Ib3N0KSkNCn0NCg0KZnVuYyBnZXQoaG9zdCBzdHJpbmcpIHN0cmluZyB7DQoJYm94IDo9IHBhY2tyLk5ld0JveCgiLi8iKQ0KCXJldHVybiBzdHJpbmdzLlJlcGxhY2UoYm94LlN0cmluZygic3BlYy5qc29uIiksICJsb2NhbGhvc3QiLCBob3N0LCAxKQ0KfQ0K\"")
	}
